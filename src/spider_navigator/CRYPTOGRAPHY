# Decrypting BuSab

## MD4 key/iv derivation:

`echo -n "PASSWORD" | openssl dgst -md4 -provider legacy`

## Decryption (des):

`openssl enc -provider legacy --des -d -in FILENAME.tar.z.enc -out FILENAME.tar.z -K HALF_OF_MD4_KEY_HERE -iv OTHER_HALF_HERE`

## Example

So for instance, to decrypt the first pages:

`echo -n "9973" | openssl dgst -md4 -provider legacy`

Gives us

`361289c48e5fb4739875a7452144389b`

We can decrypt the pages with:

`openssl enc -provider legacy --des -d -in pages.tar.z.enc -out pages.tar.z -K 361289c48e5fb473 -iv 9875a7452144389b`


## Decrypting HTML Files
The password for any tar file contained in the archive will be the name of the webpage (i.e., `page_name`).

The name of the tar file is derived through the hash from `WEBPAGE:page_name`.

The name of the first site is `murder_blog`, so:

`echo -n "WEBPAGE:murder_blog" | openssl dgst -md4 -provider legacy`

Gives us

`d46aabca7765eec9cc78b1165c44c9ad`

Which is the base name of our tar file.

Then derive the password:

`echo -n "murder_blog" | openssl dgst -md4 -provider legacy`

Which gives

`aace94fa5c94c1901e55a07c2945bdd4`

So we decrypt with 

`openssl enc -provider legacy --des -d -in d46aabca7765eec9cc78b1165c44c9ad.tar.z.enc -out murder_blog.tar.z -K aace94fa5c94c190 -iv 1e55a07c2945bdd4`